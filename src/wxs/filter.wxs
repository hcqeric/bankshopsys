var formatNumber = function(n){
  n = n.toString()
  return n[1] ? n : '0' + n
}

var regYear = getRegExp("(y+)", "i");

var dateFormat = function(timestamp,format){
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  var reg = getRegExp("/-/", "g");
  timestamp = timestamp.replace(reg,'/')
  var stamp = Date.parse(timestamp)
  stamp = parseInt(stamp);
  var realDate = getDate(stamp);
  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  // console.log(reg1[0]);
  if (reg1) {

    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i=0;i<date.length;i++) {
    var k = date[i][0];
    var v = date[i][1];

    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1
        ? v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}

var bankcardFormat = function(value, showlength){
  showlength = showlength != null ? showlength : 4
  var length = value.toString().length

  var replaceString = ''
  for (var index = 0; index < length; index++) {
    if (index > showlength - 1 && index < length - showlength) {
      replaceString += '*'
    }
  }
  return value.replace(value.substring(showlength, length - showlength), replaceString)
}

var getDate = function(dateString){
  return dateString.split(' ')[0]
}
var getTime = function(dateString){
  return dateString.split(' ')[1]
}
var toNumFixed = function(num = 0, fixlen = 2) {
  return num.toFixed(2)
}

module.exports = {
  dateFormat: dateFormat,
  getDate: getDate,
  getTime: getTime,
  bankcardFormat: bankcardFormat,
  toNumFixed: toNumFixed
};

