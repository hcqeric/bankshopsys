<style lang="less">
  .mm-page{
    box-sizing: border-box;
    padding-top: 16rpx;
  }
  .branch-bank-picker{
    .picker{
      height: 1.4rem;
      line-height: 1.4rem;
      padding: 16rpx;
      border-radius: 16rpx;
      border: 1rpx solid #999;
      color: #999;
    }
    .picker.selected{
      color: #333;
    }
  }
</style>
<template>
  <view class="mm-page">
    <view class="changecard-info">
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>开户人姓名</text>
        </view>
        <view class="change-info-input">
          <input type="text" placeholder="请输入开户人姓名" @input="handleInput" data-obj="updateCardInfo"  data-item="accountName" value="{{updateCardInfo.accountName}}"/>
          <!--<input type="text" bindinput="inputeidt" data-obj="obj" data-item="item" value="{{obj.item}}"/>-->
        </view>
      </view>
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>银行卡号</text>
        </view>
        <view class="change-info-input">
          <input type="number" placeholder="请输入银行卡号" maxlength="21" @input="handleInput" data-obj="updateCardInfo"  data-item="cardNo" value="{{updateCardInfo.cardNo}}" @blur="handleCardNoBlur"/>
        </view>
      </view>
    </view>

    <view class="changecard-info">
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>银行地区</text>
        </view>
        <view class="change-info-input">
          <input  @tap="openAddressPicker" type="text" placeholder="请选择银行地区" disabled="true" value="{{fullArea}}" />
          <image src="../images/arrow-down.png"></image>
          <areaPicker @areaArray.user="areaPickerArray"></areaPicker>
        </view>
      </view>
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>银行名称</text>
        </view>
        <view class="change-info-input">
          <input type="text" placeholder="-- 请选择支行 --"  disabled="true"  value="{{updateCardInfo.bankName}}"/>
        </view>
      </view>
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>银行支行名称</text>
        </view>
        <view class="change-info-input">
          <input wx:if="{{branchBankArray.length <= 0}}" @tap="openBranchBankPicker" type="text" placeholder="请选择银行支行名称" disabled="true"/>
          <picker wx:else="{{branchBankArray.length > 0}}" class="branch-bank-picker"  @change="bindBranchBankChange" value="{{index}}" range="{{branchBankArray}}"  range-key="subbranchBank" >
            <view class="picker {{updateCardInfo.branchBankName != ''? 'selected' : ''}}" >
              {{updateCardInfo.branchBankName == '' ? '请选择银行支行名称' : branchBankArray[index].subbranchBank}}
            </view>
          </picker>
          <image src="../images/arrow-down.png"></image>
        </view>
      </view>
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>手机号码</text>
        </view>
        <view class="change-info-input">
          <input type="number" placeholder="请输入银行卡预留手机号" maxlength="11" @input="handleInput" data-obj="updateCardInfo"  data-item="mobilePhone" value="{{updateCardInfo.mobilePhone}}"/>
        </view>
      </view>
      <view class="change-info-item">
        <view class="change-info-item-label">
          <i>*</i><text>验证码</text>
        </view>
        <view class="change-info-input">
          <input type="number" placeholder="请输入验证码" @input="handleInput" data-obj="updateCardInfo"  data-item="verificationCode" value="{{updateCardInfo.verificationCode}}"/>
          <text class="vericode-btn" wx:if="{{sendMsgDisabled}}">{{time+'秒后获取'}}</text>
          <text class="vericode-btn" @tap.stop="getVerifyCode" wx:else="{{sendMsgDisabled}}">获取验证码</text>
        </view>
      </view>
      <view class="confirm-btn">
        <button @tap="submitInfo">提交</button>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import AreaPicker from "../components/common/wepy-area-picker";
  import {selBanks, getVeriCodeNoType, updateCardNo} from '../http/getData';
  import tip from '../utils/tip'
  export default class ChangeBankCard extends wepy.page {
    config = {
      navigationBarTitleText: '更换银行卡'
    }

    components = {
      areaPicker: AreaPicker
    }

    data = {
      sendMsgDisabled: false,
      index: 0,
      branchBankArray:[],
      updateCardInfo:{
          mobilePhone:'',
          verificationCode: '',
          cardNo: '',
          bankName: '',
          accountName: '',
          province: '',
          city: '',
          district: '',
          branchBankId: '',
          branchBankName: '',
          idCardNo: ''
      },
      time: 60,
      province: '',
      city: '',
      area: '',
      fullArea: ''
    }

    async sendVerifyCode() {
      const json = await getVeriCodeNoType({
        mobile: this.updateCardInfo.mobilePhone
      });
      if (json.code == 0) {
        tip.success("发送成功!");
        this.$apply();
      } else {
        tip.error(json.msg)
      }
    }

    checkAllNeeded(){
      if (!this.updateCardInfo.accountName
        || !this.updateCardInfo.mobilePhone
        || !this.updateCardInfo.verificationCode
        || !this.updateCardInfo.cardNo
        || !this.updateCardInfo.bankName
        || !this.updateCardInfo.province
        || !this.updateCardInfo.branchBankId
        || !this.updateCardInfo.branchBankName
      ){
        tip.success("标星项为必填！")
        return false
      }else{
        return true
      }
    }

    methods = {
      bindBranchBankChange(e){
        let i = e.detail.value
        this.index = e.detail.value
        this.updateCardInfo.branchBankId = this.branchBankArray[i].id
        this.updateCardInfo.branchBankName = this.branchBankArray[i].subbranchBank
      },
      getVerifyCode(){
        if (this.updateCardInfo.mobilePhone == "") {
          tip.alert("请输入手机号码");
          return false;
        }
        this.sendVerifyCode();
        let that = this;
        that.sendMsgDisabled = true;
        let interval = setInterval(() => {
          if ((that.time--) <= 0) {
            that.time = 60;
            that.sendMsgDisabled = false;
            clearInterval(interval);
            that.$apply();
          }
          that.$apply();
        }, 1000);
      },

      handleInput(e){
        let dataset = e.currentTarget.dataset
        this[dataset.obj][dataset.item] = e.detail.value
      },
      submitInfo(){
        if (!this.checkAllNeeded()) {
          return false
        }

        updateCardNo({
          mobilePhone:this.updateCardInfo.mobilePhone,
          verificationCode: this.updateCardInfo.verificationCode,
          cardNo: this.updateCardInfo.cardNo,
          bankName: this.updateCardInfo.bankName,
          accountName: this.updateCardInfo.accountName,
          province: this.updateCardInfo.province,
          city: this.updateCardInfo.city,
          district: this.updateCardInfo.district,
          branchBankId: this.updateCardInfo.branchBankId,
          branchBankName: this.updateCardInfo.branchBankName
        }).then(response=>{
          wepy.redirectTo({
            url: 'changesucc'
          })
          console.log(userSpecInfo)
        }, error=>{
          console.log(error)
        })
      },
      handleCardNoBlur(e){
        if (this.updateCardInfo.cardNo != '' && this.updateCardInfo.province != ''){
          selBanks({
            provinceCode: this.updateCardInfo.province,
            cityCode: this.updateCardInfo.city,
            bankCardNo: this.updateCardInfo.cardNo
          }).then(response => {
            if (response.result != undefined) {
              this.updateCardInfo.bankName = response.result[0].bankName
              this.branchBankArray = response.result
            } else{
              tip.alert("银行卡号和银行地区信息不匹配")
            }
            this.$apply()
          }, error =>{
            this.$apply()
          })
        }
        console.log(e.detail)
        this.bankCardNo = e.detail.value
      },
      openBranchBankPicker(){
        if (!this.updateCardInfo.cardNo) {
          wepy.showToast({
            title: '请输入银行卡号',
            icon: 'none',
            duration: 1500
          })
          return
        }
        if (!this.fullArea) {
          wepy.showToast({
            title: '请选择银行地区',
            icon: 'none',
            duration: 1500
          })
          return
        }

      },
      areaPickerArray(province, city, area) {
        this.province = province;
        this.city = city;
        this.area = area;
        this.updateCardInfo.province = province.areaCode;
        this.updateCardInfo.city = city.areaCode;
        this.updateCardInfo.district = area.areaCode;
        this.fullArea = this.province.name + this.city.name + this.area.name
        if (this.updateCardInfo.cardNo != '') {
          selBanks({
            provinceCode: this.updateCardInfo.province,
            cityCode: this.updateCardInfo.city,
            bankCardNo: this.updateCardInfo.cardNo
          }).then(response => {
            console.log(response.result[0].bankName)
            this.updateCardInfo.bankName = response.result[0].bankName
            this.branchBankArray = response.result
            this.$apply()
          }, error =>{
            this.$apply()
          })
        }
        this.$apply();
      },
      openAddressPicker() {
        this.$invoke('areaPicker', 'openAddressPicker');
      },
    }
  }
</script>
