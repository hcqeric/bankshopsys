<style lang="less">
  .mm-page{
    position: relative;
    .swiper-tab-merchant {
      /*padding: 0 30rpx;*/
      background: #fff;
      &>.merchant-tab.swiper-tab{
        &>.swiper-tab-list{
          flex: 1;
        }
        &>.swiper-tab-list.active{
          position: relative;
          color: #4a93db;
          &:after{
            position: absolute;
            content: '';
            left: 50%;
            margin-left: -80rpx;
            height: 4rpx;
            width: 160rpx;
            background: #4a93db;
            bottom: 0;
          }
        }
      }
    }
    .swiper-list-box{
      box-sizing: border-box;
      padding: 16rpx 30rpx 0;
      .item_content{
        margin-top: 16rpx;
      }
    }
    /*.partner-list-no-content{*/
      /*position: absolute;*/
      /*top: 82rpx;*/
      /*bottom: 0;*/
      /*left: 0;*/
      /*right: 0;*/
      /*background: #fff;*/
      /*display: flex;*/
      /*align-items: center;*/
      /*justify-content: center;*/
      /*.no-content-tip{*/
        /*width: 60vw;*/
        /*display: flex;*/
        /*flex-direction: column;*/
        /*justify-content: center;*/
        /*align-items: center;*/
        /*p{*/
          /*font-size: 50rpx;*/
          /*color: #333;*/
        /*}*/
        /*text{*/
          /*font-size: 36rpx;*/
          /*text-align: center;*/
        /*}*/
        /*button{*/
          /*margin-top: 16rpx;*/
          /*flex: 1;*/
          /*width: 100%;*/
          /*background: #4a93db;*/
          /*color: #fff;*/
        /*}*/
      /*}*/
    /*}*/
  }




</style>
<template>
  <view class="mm-page">
    <view class="swiper-tab-merchant">
      <tab class="merchant-tab" @currentTab.user="getCurrentTab" :tabList.sync="tabList" :currentTab.sync='currentTab'></tab>
    </view>
    <scroll-view scroll-y="true" class="swiper-list-box" style="height:{{winHeight - 44}}px" @scrolltolower="onReachBottom">
      <!--<orderItem :orderList.sync="orderList" class="swiper-item-order"></orderItem>-->
      <repeat  for="{{merchantList}}" key="index" index="index" item="item">
        <navigator class="item_content" url="{{currentTab == 1 ? '/pages/merchantdtl?id='+ item.id : '/pages/partnerdtl?id=' + item.userId}}">
          <merchantitem wx:if="{{currentTab == 0}}" :merchantType.sync="currentTab"></merchantitem>
          <partneritem wx:else="{{currentTab == 1}}" :merchantType.sync="currentTab"></partneritem>
        </navigator>
      </repeat>

      <!--加载更多时动画-->
      <!--<bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>-->
      <!--&lt;!&ndash;暂无数据显示&ndash;&gt;-->
      <view wx:if="{{allLoaded}}" class="page-allLoaded">
        <text class="txt-bottom">o(╥﹏╥)o已经触碰到底线了!!!</text>
        <text class="line"></text>
      </view>
    </scroll-view>

    <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
    <view class="partner-list-no-content" wx:if="{{currentTab == 0 && userType == 0}}">
      <view class="no-content-tip">
        <p>o(╥﹏╥)o</p>
        <text>您还不是合伙人管理员</text>
        <button @tap="toUpLevel">去提升等级</button>
      </view>
    </view>
    <view class="partner-list-no-content" wx:if="{{currentTab == 1 && noData == true}}">
      <view class="no-content-tip">
        <p>o(╥﹏╥)o</p>
        <text>您还没有添加过商户</text>
        <button @tap="toQuickRec">去添加商户</button>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import Tab from '@/components/common/tab'
  import MerchantItem from '@/components/merchantitem'
  import PartnerItem from '@/components/partneritem'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import Placeholder from "../components/common/placeholder"
  import {getMerchantList, getPartnerList} from '../http/getData';
  import {USER_SPECICAL_INFO} from '../utils/constant';

  export default class MerchantMgr extends wepy.page {
    config = {
      navigationBarTitleText: '商户管理'
    }

    components = {
      tab: Tab,
      merchantitem: MerchantItem,
      partneritem: PartnerItem,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder
    }

    data = {
      tabList: ["我的合伙人", "我的商户"],
      currentTab: 0,
      userType: 2,
      is_empty: false,
      winHeight: 0,
      showLoading: false,
      merchantList: [],
      page: "1",
      limit: "15",
      noData: false,
      totalCount: 0,
      allLoaded: false
    }
    methods = {
      toUpLevel(){
        wepy.navigateTo({
          url: 'mylevel'
        })
      },
      toQuickRec(){
        wepy.navigateTo({
          url: 'quickrec'
        })
      },
      getCurrentTab(cur, evt) {
        this.page = 1;
        this.customManagerList = [];
        this.totalCount = 0
        this.allLoaded = false
        let that = this;
        that.currentTab = cur;
        if (cur == 0) {
          console.log("我的合伙人");
          that.getList();
        } else if (cur == 1) {
          console.log("我的商户");
          that.getList();
        }
        that.$apply();
      },
      onReachBottom(){
        let that = this;
        if(this.totalCount - parseInt(this.limit) * this.page > 0){
          that.allLoaded = false;
          that.page++;
          that.getList()
        }else{
          if (this.totalCount > 0) {
            that.allLoaded = true;
          }else{
            that.allLoaded = false;
          }
        }
      }
    }

    onLoad(){
      this.currentTab = 0
      let sysinfo = wepy.getSystemInfoSync()
      this.winHeight = sysinfo.windowHeight
      this.getList()
    }

    getList(){
      let userSpecInfo = wepy.getStorageSync(USER_SPECICAL_INFO)
      this.noData = false
      if (this.currentTab == 0){
        if (userSpecInfo.userType < 2) {
          this.userType = 0
        }else {
          this.userType = 2
          getPartnerList({
            page: this.page + '',
            limit: this.limit
          }).then(response=>{
            this.totalCount = response.result.totalCount
            if (response.result.totalCount == 0){
              this.is_empty = true;
            }else{
              this.is_empty = false;
            }
            if (response.result.list != undefined) {
              response.result.list.map(item=>{
                this.merchantList.push(item)
              })
            }
            this.$apply();
          },error=>{
            if (this.totalCount == 0) {
              this.noData = true
            }else {
              this.noData = false
            }
            this.$apply()
          })
        }
      }else{
        this.userType = 2
        getMerchantList({
          page: this.page + '',
          limit: this.limit
        }).then(response=>{
          this.totalCount = response.result.totalCount
          if (response.result.totalCount == 0){
            this.noData = true
          }else{
            this.noData = false
          }
          if (response.result.list != undefined) {
            response.result.list.map(item=>{
              this.merchantList.push(item)
            })
          }
          this.$apply()
        },error=>{
          if (this.totalCount == 0) {
            this.is_empty = true
          }else {
            this.is_empty = false
          }
          this.$apply()
        })
      }
    }
  }
</script>
