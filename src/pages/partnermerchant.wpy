<style lang="less">
  .partnermerchant-list-box{
    box-sizing: border-box;
    padding: 16rpx 30rpx 0;
    .item_content{
      margin-top: 16rpx;
    }
  }
</style>
<template>
  <view class="mm-page">
    <view class="partnermerchant-list-box">
    <repeat  for="{{partnerMerchantList}}" key="index" index="index" item="item">
    <!--<orderItem :orderList.sync="orderList" class="swiper-item-order"></orderItem>-->
      <merchantitem class="item_content" :merchantType.sync="currentTab" :merchantInfo="item" :canGetDetail="1"></merchantitem>
    </repeat>
    </view>
    <!--&lt;!&ndash;加载更多时动画&ndash;&gt;-->
    <!--<bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>-->
    <!--暂无数据显示-->
    <view wx:if="{{allLoaded}}" class="page-allLoaded">
    <text class="txt-bottom">o(╥﹏╥)o已经触碰到底线了!!!</text>
    <text class="line"></text>
    </view>
    <placeholder :show.sync="is_empty" :topZero="is_top" message="暂无发现数据"></placeholder>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import Placeholder from "../components/common/placeholder"
  import MerchantItem from '@/components/merchantitem'
  import {getMerchantList} from '../http/getData';
  export default class PartnerMerchant extends wepy.page {

    config = {
      enablePullDownRefresh: true
    }

    components = {
      merchantitem: MerchantItem,
      placeholder: Placeholder
    }

    data = {
        id: '',
        page: 1,
        limit: '15',
        currentTab: 1,
        is_empty: false,
        is_top: true,
        allLoaded: false,
        isPullDownRefresh: false,
        partnerMerchantList: []
      }

    onLoad(opts){
      let {id, name} = opts
      this.id = id
      wepy.setNavigationBarTitle({
        title: `${name}的商户`
      })
      this.getPartnerMerchantList()
    }

    onPullDownRefresh () {
      // 显示顶部刷新图标
      wepy.showNavigationBarLoading();
      this.partnerMerchantList = []
      this.isPullDownRefresh = true
      this.page = 1
      this.getPartnerMerchantList()

    }

    getPartnerMerchantList(){
      getMerchantList({
        userId: this.id + '',
        page: this.page + '',
        limit: this.limit
      }).then(response=>{
        this.totalCount = response.result.totalCount
        if (response.result.totalCount == 0){
          this.is_empty = true;
        }else{
          this.is_empty = false;
        }
        if (response.result.list != undefined) {
          response.result.list.map(item=>{
            this.partnerMerchantList.push(item)
          })
        }
        this.stopPullDown()
        this.$apply();
      }, error=>{
        this.stopPullDown()
      }).catch(error =>{
        if (this.partnerMerchantList.length > 0) {
          this.is_empty = false
        }else {
          this.is_empty = true
        }
        this.stopPullDown()
      })
    }

    stopPullDown(){
      if (this.isPullDownRefresh) {
        // 隐藏导航栏加载框
        wepy.hideNavigationBarLoading();
        // 停止下拉动作
        wepy.stopPullDownRefresh()
      }
    }

    //加载更多
    onReachBottom() {
      let that = this;
      if(this.totalCount - parseInt(this.limit) * this.page > 0){
        this.allLoaded = false
        that.page++;
        that.getPartnerMerchantList()
      }else{
        if (this.partnerMerchantList.length > 5) {
          this.allLoaded = true
        }else {
          this.allLoaded = false
        }
      }
    }
  }
</script>
